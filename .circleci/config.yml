version: 2.1

orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@3.2.5

jobs:
  Mega-Linter:
    environment:
      DEFAULT_WORKSPACE: /root/project
    docker:
      - image: oxsecurity/megalinter-go:v7
        # checkov:skip=CKV_CIRCLECIPIPELINES_2:prefer mutable but stable tags
    steps:
      - checkout
      - run:
          command: |
            sh /entrypoint.sh
      - store_artifacts:
          path: megalinter-reports
  test:
    parameters:
      python-version:
        type: string
    executor:
      name: python/default
      tag: << parameters.python-version >>
    steps:
      - checkout
      - run:
          name: install poetry
          command: |
            python3 -m pip install --upgrade pip
            python3 -m pip install --upgrade pipx
            python3 -m pipx ensurepath
            python3 -m pipx install poetry
            poetry env use << parameters.python-version >>
      - python/install-packages:
          cache-version: v1
          include-python-in-cache-key: true
          pkg-manager: poetry
          args: "--sync"
      - run:
          name: lint
          command: |
            poetry run poe lint
      - run:
          name: test
          command: |
            poetry run poe test
      - codecov/upload
      - run:
          name: packaging test
          command: |
            set +e
            poetry run poe clean
            poetry run poe package
            poetry run poe check-package
        # Figure out which versions of Python work well with Invoke, since
        # Invoke may not work with recent Python releases.
        #
        # https://github.com/pyinvoke/invoke/issues/833#issuecomment-1293148106
        # https://github.com/pyinvoke/invoke/pull/458
        # https://github.com/pyinvoke/invoke/pull/606

workflows:
  CI:
    jobs:
      - Mega-Linter
      - test:
          matrix:
            parameters:
              python-version:
                - "3.8"
                - "3.9"
                - "3.10"
                - "3.11"
